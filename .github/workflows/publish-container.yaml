# yamllint disable rule:line-length
# yamllint disable rule:truthy
---
name: publish job container to registry

on:
  workflow_call:

    secrets:
      OP_SERVICE_ACCOUNT_TOKEN:
        description: 1password vault services account token
        required: false

    inputs:

      working-directory:
        description: set working directory, Default is ./.
        required: false
        type: string
        default: "."

      op-version:
        description: install 1password-cli version
        required: false
        type: string
        default: ""

      teller-version:
        description: install teller version
        required: false
        type: string
        default: ""

      vault-version:
        description: install vault version
        required: false
        type: string
        default: ""

      cosign-version:
        description: install cosign version
        required: false
        type: string
        default: ""

      syft-version:
        description: install syft version
        required: false
        type: string
        default: ""

      oras-version:
        description: install oras version
        required: false
        type: string
        default: ""

      registry:
        description: name of registry
        required: false
        type: string
        default: docker.io

      organization:
        description: dtr compatible organization identified
        required: false
        type: string
        default: ""

      image:
        description: name of image
        required: true
        type: string

      pull-tag:
        description: value for tag to pull and make publish release
        required: false
        type: string
        default: dev.${GITHUB_SHA:0:7}

      tag-annotation:
        description: additional text for semantic version tag
        required: false
        type: string
        default: ""

      version-tag:
        description: default version release tag
        required: false
        type: string
        default: ${GITHUB_REF_NAME}

      release-tag:
        description: additional release tag
        required: false
        type: string
        default: "false"

      sign-image:
        description: sign OCI image using cosign
        required: false
        type: string
        default: "false"

      cosign-attestations:
        description: attestations to include in signature
        required: false
        type: string
        default: ""

      cosign-sign-key:
        description: path to private key used to sign image
        required: false
        type: string
        default: cosign.key

      cosign-verify-key:
        description: path to public key used to verify signature
        required: false
        type: string
        default: cosign.pub

      sbom:
        description: include a software bill of materials with the signature
        required: false
        type: string
        default: "false"

      sbom-filename:
        description: name of sbom file
        required: false
        type: string
        default: "sbom.spdx"

      release-notes:
        description: generate release notes
        required: false
        type: string
        default: "false"

      release-body-path:
        description: path to file containing release message body
        required: false
        type: string
        default: "release-notes.md"

      release-artifacts:
        description: path to artifacts to include in release
        required: false
        type: string
        default: "false"

      release-message:
        description: post message to slack channel on successful publish
        required: false
        type: string
        default: "false"

      before-publish:
        description: optionally call ./.github/actions/before-publish before image version tag publish
        required: false
        type: string
        default: "false"

      after-publish:
        description: optionally call ./.github/actions/after-publish after image version tag publish
        required: false
        type: string
        default: "false"

      builder-image-version:
        description: default is latest
        type: string
        required: false
        default: "twdps/gha-container-builder:latest"

jobs:

  publish-container:
    name: publish job container to registry
    runs-on: ubuntu-latest
    container: ${{ inputs.builder-image-version }}

    env:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

    steps:
      - name: checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683      # v4.2.2

      - name: install publish dependencies
        uses: ThoughtWorks-DPS/gha-tools-action/install@main
        with:
          op-version: ${{ inputs.op-version }}
          teller-version: ${{ inputs.teller-version }}
          vault-version: ${{ inputs.vault-version }}
          cosign-version: ${{ inputs.cosign-version }}
          syft-version: ${{ inputs.syft-version }}
          oras-version: ${{ inputs.oras-version }}

      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.image }}_${{ inputs.tag-annotation }}${{ inputs.pull-tag }}_docker_build.log
          path: ${{ inputs.image }}_${{ inputs.tag-annotation }}${{ inputs.pull-tag }}_docker_build.log

      - name: test
        shell: bash
        run: ls -la

      - name: run custom before-publish action
        if: ${{ inputs.before-publish != 'false' }}
        uses: ./.github/actions/before-publish
        with:
          instance: ${{ inputs.before-publish }}

      - name: confirm registry credentials and access
        uses: ThoughtWorks-DPS/gha-tools-action/confirm-registry@main
        with:
          registry: ${{ inputs.registry }}

      - name: pull image to be published
        uses: ThoughtWorks-DPS/gha-tools-action/pull@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          organization: ${{ inputs.organization }}
          image: ${{ inputs.image }}
          tag: ${{ inputs.tag-annotation }}${{ inputs.pull-tag }}

      - name: tag image with release version
        uses: ThoughtWorks-DPS/gha-tools-action/tag@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          organization: ${{ inputs.organization }}
          image: ${{ inputs.image }}
          current-tag: ${{ inputs.tag-annotation }}${{ inputs.pull-tag }}
          release-tag: ${{ inputs.tag-annotation }}${{ inputs.version-tag }}

      - name: create additional release version tag
        if: ${{ inputs.release-tag != 'false' }}
        uses: ThoughtWorks-DPS/gha-tools-action/tag@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          organization: ${{ inputs.organization }}
          image: ${{ inputs.image }}
          current-tag: ${{ inputs.tag-annotation }}${{ inputs.pull-tag }}
          release-tag: ${{ inputs.tag-annotation }}${{ inputs.release-tag }}

      - name: push image to container registry
        uses: ThoughtWorks-DPS/gha-tools-action/push@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          organization: ${{ inputs.organization }}
          image: ${{ inputs.image }}
          tag: ${{ inputs.tag-annotation }}${{ inputs.version-tag }}

      - name: push additional release tag to container registry
        if: ${{ inputs.release-tag != 'false' }}
        uses: ThoughtWorks-DPS/gha-tools-action/push@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          organization: ${{ inputs.organization }}
          image: ${{ inputs.image }}
          tag: ${{ inputs.tag-annotation }}${{ inputs.release-tag }}

      - name: run custom after-publish action
        if: ${{ inputs.after-publish != 'false' }}
        uses: ./.github/actions/after-publish
        with:
          instance: ${{ inputs.after-publish }}

      - name: sign image using cosign
        if: ${{ inputs.sign-image == 'true' }}
        uses: ThoughtWorks-DPS/gha-tools-action/sign@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          organization: ${{ inputs.organization }}
          image: ${{ inputs.image }}
          tag: ${{ inputs.tag-annotation }}${{ inputs.version-tag }}
          cosign-attestations: ${{ inputs.cosign-attestations }}
          cosign-sign-key: ${{ inputs.cosign-sign-key }}
          cosign-verify-key: ${{ inputs.cosign-verify-key }}

      - name: generate sbom
        if: ${{ inputs.sign-image == 'true' }}
        uses: ThoughtWorks-DPS/gha-tools-action/sbom@main
        with:
          working-directory: ${{ inputs.working-directory }}
          registry: ${{ inputs.registry}}
          sbom-filename: ${{ inputs.sbom-filename }}

      - name: Publish Release
        if: ${{ inputs.release-notes == 'true' }}
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          draft: false
          prerelease: false
          release_name: ${{ inputs.tag-annotation }}${{ inputs.version-tag }}
          tag_name: ${{ inputs.version-tag }}
          body_path: ${{ inputs.release-body-path }}

      - name: Upload release binaries
        if: ${{ inputs.release-artifacts != 'false' }}
        uses: alexellis/upload-assets@0.4.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: ${{ inputs.release-artifacats }}

      # - name: publish semantic release version from tag
      #   if: ${{ inputs.release-notes == 'true' }}
      #   shell: bash
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh release create "${{ inputs.tag-annotation }}${{ inputs.version-tag }}" \
      #        --repo="${{ github.repository }}" \
      #        --title="${{ inputs.tag-annotation }}${{ inputs.version-tag }}"

      # - name: post new release message
      #   if: ${{ inputs.release-message != 'false' }}
      #   uses: ThoughtWorks-DPS/common-actions/slack-bot@main
      #   with:
      #     channel: lab-events
      #     message: ${{ inputs.release-message }}
      #     include-tag: true
